@using Microsoft.AspNetCore.Identity;

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column my-menu">
    <li class="nav-item "><a class="nav-link  @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Perfil</a></li>
    <li class="nav-item "><a class="nav-link  @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
    <li class="nav-item "><a class="nav-link  @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
    <li class="nav-item"><a class="nav-link" asp-area="" asp-controller="PerfilCategorias" asp-action="Index">Lista de Categorias Favoritas</a></li>
    <li class="nav-item"><a class="nav-link" asp-area="" asp-controller="PerfilJogos" asp-action="Index">Histórico de Compras</a></li>
    @if (SignInManager.IsSignedIn(User))
    {
        if (User.IsInRole("Admin") || User.IsInRole("Funcionario"))
        {
            <li class="nav-item">
                <a class="nav-link" asp-area="" asp-controller="JogoModels" asp-action="Index">DashBoard Jogos</a>
            </li>
        }
        if (User.IsInRole("Admin"))
        {
            <li class="nav-item">
                <a class="nav-link" asp-area="" asp-controller="CategoriaModels" asp-action="Index"> DashBoard Categorias</a>
            </li>
        }
    }
   
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Dados Pessoais</a></li>

    
</ul>
